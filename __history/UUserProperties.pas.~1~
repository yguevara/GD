unit UUserProperties;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes,
  Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Mask,
  Vcl.DBCtrls, Vcl.ExtCtrls, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  cxGraphics, cxControls, cxLookAndFeels, cxLookAndFeelPainters, cxContainer,
  cxEdit, dxSkinsCore, dxSkinBlack, dxSkinBlue, dxSkinBlueprint, dxSkinCaramel,
  dxSkinCoffee, dxSkinDarkRoom, dxSkinDarkSide, dxSkinDevExpressDarkStyle,
  dxSkinDevExpressStyle, dxSkinFoggy, dxSkinGlassOceans, dxSkinHighContrast,
  dxSkiniMaginary, dxSkinLilian, dxSkinLiquidSky, dxSkinLondonLiquidSky,
  dxSkinMcSkin, dxSkinMetropolis, dxSkinMetropolisDark, dxSkinMoneyTwins,
  dxSkinOffice2007Black, dxSkinOffice2007Blue, dxSkinOffice2007Green,
  dxSkinOffice2007Pink, dxSkinOffice2007Silver, dxSkinOffice2010Black,
  dxSkinOffice2010Blue, dxSkinOffice2010Silver, dxSkinOffice2013DarkGray,
  dxSkinOffice2013LightGray, dxSkinOffice2013White, dxSkinOffice2016Colorful,
  dxSkinOffice2016Dark, dxSkinPumpkin, dxSkinSeven, dxSkinSevenClassic,
  dxSkinSharp, dxSkinSharpPlus, dxSkinSilver, dxSkinSpringTime, dxSkinStardust,
  dxSkinSummer2008, dxSkinTheAsphaltWorld, dxSkinTheBezier,
  dxSkinsDefaultPainters, dxSkinValentine, dxSkinVisualStudio2013Blue,
  dxSkinVisualStudio2013Dark, dxSkinVisualStudio2013Light, dxSkinVS2010,
  dxSkinWhiteprint, dxSkinXmas2008Blue, cxTextEdit, cxMaskEdit, cxDropDownEdit,
  cxLookupEdit, cxDBLookupEdit, cxDBLookupComboBox;

type
  TfrmProperties = class(TForm)
    Panel4: TPanel;
    lblGrupo: TLabel;
    Panel2: TPanel;
    cbEnable: TComboBox;
    Label2: TLabel;
    Label6: TLabel;
    edtMinisterio: TDBEdit;
    Label5: TLabel;
    Label1: TLabel;
    lblNameUser: TLabel;
    edtUser: TDBEdit;
    edtUserL: TDBEdit;
    edtEmpresa: TDBEdit;
    btnCreateUser: TButton;
    btnClose: TButton;
    Button1: TButton;
    lcbrol: TDBLookupComboBox;
    procedure btnCreateUserClick(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure btnCloseClick(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmProperties: TfrmProperties;
  Rol: string;

implementation

uses
  DMBDRU, UChangePass, UDMOilFile;

{$R *.dfm}

procedure TfrmProperties.btnCloseClick(Sender: TObject);
begin
  try
    if AppSelect = 'BDR' then
      DMBDR.Tb_User.Cancel
    else
      DMOilFile.Tb_User.Cancel;
    Close;
  except
    on E: EDatabaseError do
    begin
      MessageDlg('No se pudieron realizar los cambios solicitados.' + E.Message, mtError, [mbOK], 0);
      Exit;
    end;
  end;
end;

procedure TfrmProperties.btnCreateUserClick(Sender: TObject);
var
  bm: TBookmark;
begin
  if AppSelect = 'BDR' then
  begin
    bm := DMBDR.Tb_User.GetBookmark;
    if (DMBDR.Tb_User.State <> dsedit) and (DMBDR.Tb_User.State <> dsinsert) then
      DMBDR.Tb_User.Edit;
    if trim(cbEnable.Text) <> '' then
      DMBDR.Tb_User.FieldByName('habilitado').AsString := cbEnable.Text;
    try
      DMBDR.Tb_User.Post;
      DMBDR.Tb_User.GotoBookmark(bm);
    except
      on E: EDatabaseError do
      begin
        MessageDlg('No se pudieron realizar los cambios solicitados.' + E.Message, mtError, [mbOK], 0);
        Exit;
      end;
    end;
  end
  else
  begin
    bm := DMOilFile.Tb_User.GetBookmark;
    if (DMOilFile.Tb_User.State <> dsedit) and (DMOilFile.Tb_User.State <> dsinsert) then
      DMOilFile.Tb_User.Edit;
    if trim(cbEnable.Text) <> '' then
      DMOilFile.Tb_User.FieldByName('habilitado').AsString := cbEnable.Text;
    try
      DMOilFile.Tb_User.Post;
      DMOilFile.Tb_User.GotoBookmark(bm);
    except
      on E: EDatabaseError do
      begin
        MessageDlg('No se pudieron realizar los cambios solicitados.' + E.Message, mtError, [mbOK], 0);
        Exit;
      end;
    end;
  end;
end;

procedure TfrmProperties.Button1Click(Sender: TObject);
begin
  with TfrmChangePass.Create(nil) do
  try
    if AppSelect = 'BDR' then
      Caption := 'Establecer contraseña para el ususario ' + DMBDR.Tb_User.FieldByName('nombreuser').AsString
    else
      Caption := 'Establecer contraseña para el ususario ' + DMOilFile.Tb_User.FieldByName('nombreuser').AsString;
    ShowModal;
  finally
    Free;
  end;
end;

procedure TfrmProperties.FormActivate(Sender: TObject);
begin
  edtUser.SetFocus;
  edtUser.Focused;
  if AppSelect = 'BDR' then
    cbEnable.Text := DMBDR.Tb_User.FieldByName('habilitado').AsString
  else
    cbEnable.Text := DMOilFile.Tb_User.FieldByName('habilitado').AsString;
end;

procedure TfrmProperties.FormCloseQuery(Sender: TObject; var CanClose: Boolean);
begin
  if AppSelect = 'BDR' then
  begin
    if (DMBDR.Tb_User.State = dsEdit) or (DMBDR.Tb_User.State = dsInsert) then
      DMBDR.Tb_User.Cancel;
  end
  else
  begin
    if (DMOilFile.Tb_User.State = dsEdit) or (DMOilFile.Tb_User.State = dsInsert) then
      DMOilFile.Tb_User.Cancel;
  end;
//  lcbrol.Properties.CloseUp(true);
end;

procedure TfrmProperties.FormCreate(Sender: TObject);
begin
  if AppSelect = 'BDR' then
  begin
    Rol := DMBDR.Tb_Rol.FieldByName('idrol').AsString;
    cbEnable.Text := DMBDR.Tb_User.FieldByName('habilitado').AsString;
    edtUser.DataSource := DMBDR.DSTb_User;
    edtUserL.DataSource := DMBDR.DSTb_User;
    edtEmpresa.DataSource := DMBDR.DSTb_User;
    edtMinisterio.DataSource := DMBDR.DSTb_User;
    lcbrol.DataSource:=DMBDR.DSTb_User;
    lcbrol.ListSource:=DMBDR.DSTb_Rol;
  end
  else
  begin
    Rol := DMOilFile.Tb_Rol.FieldByName('idrol').AsString;
    cbEnable.Text := DMOilFile.Tb_User.FieldByName('habilitado').AsString;
    edtUser.DataSource := DMOilFile.DSTb_User;
    edtUserL.DataSource := DMOilFile.DSTb_User;
    edtEmpresa.DataSource := DMOilFile.DSTb_User;
    edtMinisterio.DataSource := DMOilFile.DSTb_User;
    lcbrol.DataSource:=DMOilFile.DSTb_User;
    lcbrol.ListSource:=DMOilFile.DSTb_Rol;
  end;
end;

end.

